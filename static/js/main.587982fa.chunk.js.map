{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["library","add","faSearch","faStar","faSpinner","Instructions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","decodeHTML","bind","assertThisInitialized","favouritesHandler","nextProps","nextState","favouredStatus","html","txt","document","createElement","innerHTML","value","obj","currentFavouredObj","getFavoured","title","index","getFavourites","indexOf","currentFavourites","splice","updateFavourites","setFavoured","favourite","getSearchResults","setFavourites","_this2","react_default","a","className","react_fontawesome_index_es","icon","id","style","color","item","onClick","dangerouslySetInnerHTML","__html","text","React","Component","App","_this3","state","wasteInfo","isLoading","userInput","searchResults","favourites","favoured","handleChange","setFilteredResults","filterResults","clickEvent","renderMultipleInstructions","enterPressed","_this4","setState","fetch","then","response","ok","json","Error","data","error","catch","addEventListener","removeEventListener","input","lowerCaseInput","toLowerCase","filter","element","keywords","includes","concat","toConsumableArray","array","event","target","results","keyCode","which","_this5","map","elem","hasOwnProperty","tempObj","App_Instructions","body","isFavourite","_this6","instructions","regexTest","test","font-size","class","type","name","onChange","background-color","rotation","size","display","align-items","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.587982fa.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { faSearch, faSpinner, faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nlibrary.add(faSearch,faStar,faSpinner);\n\nconst api =\n  \"https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000\";\n\n\n\n\n\nclass Instructions extends React.Component {\n  constructor(props){\n    super(props);\n\n\n    this.decodeHTML = this.decodeHTML.bind(this);\n    this.favouritesHandler = this.favouritesHandler.bind(this);\n\n  }\n\n  shouldComponentUpdate(nextProps,nextState){\n    return this.props.favouredStatus !== nextProps.favouredStatus;\n\n  }\n\n\n  decodeHTML(html) {\n    let txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  favouritesHandler(obj){\n    let currentFavouredObj = this.props.getFavoured();\n\n    if(currentFavouredObj[obj.title]){\n      const index = this.props.getFavourites().indexOf(obj);\n      let currentFavourites = this.props.getFavourites();\n      currentFavourites.splice(index,1);\n      this.props.updateFavourites(currentFavourites);\n      currentFavouredObj[obj.title] = false;\n      this.props.setFavoured(currentFavouredObj);\n    }\n    else{\n      const favourite = this.props.getSearchResults()[this.props.getSearchResults().indexOf(obj)];\n\n      this.props.setFavourites(favourite);\n      currentFavouredObj[obj.title] = true;\n      this.props.setFavoured(currentFavouredObj);\n    }\n\n\n\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"title\">\n        <FontAwesomeIcon\n        icon={faStar}\n        id=\"icon\"\n        style={{\n          color:this.props.getFavoured()[this.props.item.title] ? \"rgb(35, 167, 35)\": \"grey\"\n\n        }}\n        onClick={() => this.favouritesHandler(this.props.item)} />\n        <p id=\"title\">{this.props.title}</p>\n        </div>\n\n\n        <div className=\"body\" dangerouslySetInnerHTML={{ __html: this.decodeHTML(this.props.text) }} />\n      </div>\n    );\n\n  }\n\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wasteInfo: null,\n      isLoading: false,\n      userInput: \"\",\n      searchResults: [],\n      favourites: [],\n      favoured:{}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.setFilteredResults = this.setFilteredResults.bind(this);\n    this.filterResults = this.filterResults.bind(this);\n    this.clickEvent = this.clickEvent.bind(this);\n    this.setFavourites = this.setFavourites.bind(this);\n    this.getFavourites = this.getFavourites.bind(this);\n    this.updateFavourites = this.updateFavourites.bind(this);\n    this.getSearchResults = this.getSearchResults.bind(this);\n    this.getFavoured = this.getFavoured.bind(this);\n    this.setFavoured = this.setFavoured.bind(this);\n    this.renderMultipleInstructions = this.renderMultipleInstructions.bind(this);\n    this.enterPressed  = this.enterPressed.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(api)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n      .then(data =>\n        this.setState({\n          wasteInfo: data,\n          isLoading: false,\n          error: null\n        })\n      )\n      .catch(error =>\n        this.setState({\n          error: error,\n          isLoading: false\n        })\n      );\n      document.addEventListener(\"keydown\",this.enterPressed);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\",this.enterPressed);\n  }\n\n\n\n  getFavoured(){\n    return this.state.favoured;\n  }\n\n  setFavoured(obj){\n    this.setState({\n      favoured:obj\n    })\n  }\n  setFilteredResults(state) {\n    this.setState({\n      searchResults: state\n    });\n  }\n\n  filterResults(input) {\n    let lowerCaseInput = input.toLowerCase();\n    let results = this.state.wasteInfo.filter(element =>\n      element.keywords.includes(lowerCaseInput)\n    );\n    return results;\n  }\n\n  //add a new value to favourites array\n  setFavourites( value){\n    this.setState({\n      favourites:[...this.state.favourites,value]\n    });\n  }\n\n  //set a new array as favourites\n  updateFavourites(array){\n    this.setState({\n      favourites:array\n    })\n  }\n\n  getFavourites(){\n    return this.state.favourites;\n  }\n\n\n\n\n  getSearchResults(){\n    return this.state.searchResults;\n  }\n\n\n\n  handleChange(event) {\n    this.setState({\n      userInput: event.target.value,\n      searchResults:[]\n    });\n\n  }\n\n  clickEvent(input) {\n    const results = this.filterResults(input);\n    this.setFilteredResults(results);\n  }\n\n  enterPressed(event) {\n\n    let code = event.keyCode || event.which;\n    if(code === 13) {\n       this.clickEvent(this.state.userInput);\n    }\n  }\n\n  renderMultipleInstructions(array){\n    const results = array.map((elem)=>{\n\n      if(!this.state.favoured.hasOwnProperty(elem.title)){\n        let tempObj = this.state.favoured;\n        tempObj[elem.title]=false;\n        this.setState({\n          favoured:tempObj\n        })\n      }\n      return (\n\n          <Instructions\n          text={elem.body}\n          title={elem.title}\n          favouredStatus={this.state.favoured[elem.title]}\n          isFavourite={this.state.favourites.indexOf(elem) >= 0}\n          item ={elem}\n          setFavourites={this.setFavourites}\n          getFavourites = {this.getFavourites}\n          getSearchResults ={this.getSearchResults}\n          updateFavourites = {this.updateFavourites}\n          setFavoured={this.setFavoured}\n          getFavoured={this.getFavoured}\n          />\n      )\n      });\n\n      return results;\n\n  }\n\n  render() {\n\n    const instructions = this.renderMultipleInstructions(this.state.searchResults);\n    const favourites = this.renderMultipleInstructions(this.state.favourites);\n\n    const regex = /\\w+/gm;\n    const regexTest = regex.test(this.state.userInput);\n    if (this.state.isLoading) {\n      return (\n        <div style={{\"font-size\":\"2.5rem\"}}>\n        <FontAwesomeIcon icon=\"spinner\" className=\"fas fa-spinner fa-pulse fa- 10x loadingIcon\"\n        />\n        </div>\n        );\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"><h1>Toronto Waste Lookup</h1></header>\n\n        <div class=\"search-container\" id=\"search\">\n          <input\n            type=\"text\"\n\n            name=\"search\"\n            value={this.state.input}\n            onChange={this.handleChange}\n\n          />\n          <button style={{\"background-color\":\"rgb(35, 167, 35)\"}}\n\n            onClick={() => this.clickEvent(this.state.userInput)}\n\n          >\n            <FontAwesomeIcon icon=\"search\" rotation=\"90\" style={{color:\"white\"}} size=\"lg\" />\n          </button>\n        </div>\n        <div>{regexTest ? instructions: null}</div>\n        <div className=\"favourites\">\n          <h2  style={{color:\"rgb(35, 167, 35)\",\"display\":\"flex\",\"align-items\":\"flex-start\"}}>{this.state.favourites.length > 0?\"Favourites\":null}</h2>\n          <div>{this.state.favourites.length > 0 ? favourites: null}</div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}